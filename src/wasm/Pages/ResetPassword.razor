@page "/resetpassword"

@using Resader.Common.Api.Request
@using Resader.Common.Api.Response
@using Resader.Common.Extensions

@inject JsService jsService
@inject NavigationManager nav
@inject HttpClient http

<div>
    <NavHeader Title="重置密码"></NavHeader>

    <form class="form">
        <div class="mb-3">
            <label for="newPwd" class="form-label">新密码</label>
            <input type="password" class="form-control" id="newPwd" @bind="newPwd">
        </div>
        <div class="mb-3">
            <label for="repeatPwd" class="form-label">再次输入新密码</label>
            <input type="password" class="form-control" id="repeatPwd" @bind="repeatPwd">
        </div>
        <div class="d-grid gap-2">
          <button class="btn btn-primary" type="button" @onclick="Reset">重置</button>
        </div>
    </form>
</div>

@code {
    private string newPwd = string.Empty;
    private string repeatPwd = string.Empty;

    private async Task Reset()
    {
        if (string.IsNullOrWhiteSpace(newPwd))
        {
            await jsService.Alert("请输入新密码");
            return;
        }
        if (string.IsNullOrWhiteSpace(repeatPwd))
        {
            await jsService.Alert("请再次输入新密码");
            return;
        }
        if (newPwd != repeatPwd)
        {
            await jsService.Alert("两次新密码输入不一致");
            return;
        }

        var json = await jsService.GetItem("user-wasm");
        if (string.IsNullOrWhiteSpace(json))
        {
            nav.NavigateTo("./login");
            return;
        }
        var user = json.ToObj<UserResponse>();
        if (user == null)
        {
            nav.NavigateTo("./login");
            return;
        }

        if (!http.DefaultRequestHeaders.TryGetValues("token", out var values))
        {
            http.DefaultRequestHeaders.Add("token", user!.Token);
        }
        var response = await http.PostAsJsonAsync("./user/ResetPassword", new ResetPasswordRequest
        {
            Password = await jsService.Md5(newPwd)
        });
        var result = await response.ReadAsObj<Result>();
        if (result.Code != 0)
        {
            if (result.Code == 2)
            {
                await jsService.Alert("系统错误");
            }
            else
            {
                await jsService.Alert(result.Message);
            }
            return;
        }

        await jsService.RemoveItem("user-wasm");
        nav.NavigateTo("./login");
    }
}
