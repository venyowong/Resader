@page "/user"

@using Resader.Common.Api.Response
@using Resader.Common.Extensions

@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager nav

<div>
    @if (string.IsNullOrWhiteSpace(user.AvatarUrl))
    {
        <div class="text-center logo">
            <img src="./user.jpg" class="avatar">
        </div>
    }
    else
    {
        <div class="text-center logo">
            <img src="@user.AvatarUrl" class="avatar">
        </div>
    }

    <div class="list-group list-group-flush user-info">
        <div class="list-group-item d-flex align-items-start">
            基础信息
        </div>
        @if (!string.IsNullOrWhiteSpace(user.Name))
        {
            <div class="list-group-item d-flex justify-content-between align-items-start">
                <div class="ms-2 me-auto user-info-icon">
                    <i class="bi bi-card-text user-info-icon"></i>
                    @user.Name
                </div>
            </div>
        }
        @if (!string.IsNullOrWhiteSpace(user.Mail))
        {
            <div class="list-group-item d-flex justify-content-between align-items-start">
                <div class="ms-2 me-auto">
                    <i class="bi bi-card-text user-info-icon"></i>
                    @user.Mail
                </div>
            </div>
        }
        @if (!string.IsNullOrWhiteSpace(user.Location))
        {
            <div class="list-group-item d-flex justify-content-between align-items-start">
                <div class="ms-2 me-auto">
                    <i class="bi bi-pin-map user-info-icon"></i>
                    @user.Location
                </div>
            </div>
        }
        @if (!string.IsNullOrWhiteSpace(user.Company))
        {
            <div class="list-group-item d-flex justify-content-between align-items-start">
                <div class="ms-2 me-auto">
                    <i class="bi bi-briefcase user-info-icon"></i>
                    @user.Company
                </div>
            </div>
        }
        @if (!string.IsNullOrWhiteSpace(user.Url))
        {
            <a class="list-group-item d-flex justify-content-between align-items-center" href="@user.Url" target="_blank">
                <div class="ms-2 me-auto">
                    <i class="bi bi-layout-text-window-reverse user-info-icon"></i>
                    @user.Url
                </div>
                <i class="bi bi-chevron-right"></i>
            </a>
        }
        @if (!string.IsNullOrWhiteSpace(user.Blog))
        {
            <a class="list-group-item d-flex justify-content-between align-items-center" href="@user.Blog" target="_blank">
                <div class="ms-2 me-auto">
                    <i class="bi bi-pencil-square user-info-icon"></i>
                    @user.Blog
                </div>
                <i class="bi bi-chevron-right"></i>
            </a>
        }
        @if (!string.IsNullOrWhiteSpace(user.Bio))
        {
            <div class="list-group-item d-flex justify-content-between align-items-center">
                <div class="ms-2 me-auto text-break">
                    <i class="bi bi-file-earmark-person user-info-icon"></i>
                    @user.Bio
                </div>
            </div>
        }
        <div class="list-group-item d-flex align-items-start user-space"></div>

        <div class="list-group-item d-flex align-items-start">
            设置
        </div>
        <div class="list-group-item d-flex justify-content-between align-items-center">
            <div class="ms-2 me-auto">
                只展示未读文章
            </div>
            <div class="form-check form-switch mt-2">
                <input class="form-check-input" type="checkbox" id="onlyShowUnread">
            </div>
        </div>
        <div class="list-group-item d-flex align-items-start user-space"></div>

        <div class="list-group-item d-flex align-items-start">
            外部链接
        </div>
        <a class="list-group-item d-flex justify-content-between align-items-center" href="https://docs.rsshub.app/" target="_blank">
            <div class="ms-2 me-auto">
                <i class="bi bi-link user-info-icon"></i>
                RSSHub
            </div>
            <i class="bi bi-chevron-right"></i>
        </a>
        <a class="list-group-item d-flex justify-content-between align-items-center" href="https://www.rsssearchhub.com/" target="_blank">
            <div class="ms-2 me-auto">
                <i class="bi bi-link user-info-icon"></i>
                RSS 搜索
            </div>
            <i class="bi bi-chevron-right"></i>
        </a>
        <div class="list-group-item d-flex align-items-start user-space"></div>

        <div class="list-group-item d-flex align-items-start">
            操作
        </div>
        <a class="list-group-item d-flex justify-content-between align-items-center" href="https://www.rsssearchhub.com/" target="_blank">
            <div class="ms-2 me-auto">
                <i class="bi bi-box-arrow-in-down user-info-icon"></i>
                导入 RSS
            </div>
            <i class="bi bi-chevron-right"></i>
        </a>
        <a class="list-group-item d-flex justify-content-between align-items-center" href="https://www.rsssearchhub.com/" target="_blank">
            <div class="ms-2 me-auto">
                <i class="bi bi-box-arrow-up user-info-icon"></i>
                导出 OPML
            </div>
            <i class="bi bi-chevron-right"></i>
        </a>
        <div class="list-group-item d-flex align-items-start user-space"></div>

        <div class="list-group-item user-button">
            重置密码
        </div>
        <div class="list-group-item user-button" @onclick="@Logout">
            退出登录
        </div>
    </div>
</div>

@code {
    private UserResponse user = new UserResponse();

    protected override async Task OnInitializedAsync()
    {
        var json = await localStorage.GetItemAsStringAsync("user");
        if (string.IsNullOrWhiteSpace(json))
        {
            nav.NavigateTo("login");
            return;
        }
        user = json.ToObj<UserResponse>();
        if (user == null)
        {
            nav.NavigateTo("login");
            return;
        }

        StateHasChanged();

        await base.OnInitializedAsync();
    }

    private async Task Logout()
    {
        await localStorage.RemoveItemAsync("user");
        nav.NavigateTo("login");
    }
}
